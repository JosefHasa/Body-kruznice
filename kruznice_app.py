import streamlit as st
import matplotlib.pyplot as plt
import numpy as np
from io import BytesIO
from datetime import datetime
from reportlab.pdfgen import canvas
from reportlab.lib.pagesizes import A4
from reportlab.lib.units import cm
from reportlab.lib.colors import HexColor
from reportlab.lib.utils import ImageReader   # <-- üî• tento ≈ô√°dek p≈ôidej
from PIL import Image

# ----------------------------
# Nastaven√≠ aplikace
# ----------------------------
st.set_page_config(page_title="Body na kru≈ænici", layout="centered")

# ----------------------------
# Informace o autorovi
# ----------------------------
autor_jmeno = "Josef Ha≈°a"
autor_email = "277826@vutbr.cz"
datum = datetime.today().strftime('%d.%m.%Y')

with st.expander("‚ÑπÔ∏è O aplikaci a autorovi"):
    st.markdown(f"""
    **Body na kru≈ænici** ‚Äì ≈°koln√≠ webov√° aplikace

    - **Autor**: {autor_jmeno}  
    - **Kontakt**: {autor_email}  
    - **Pou≈æit√© technologie**: Python, Streamlit, Matplotlib, ReportLab  
    - **Datum**: {datum}
    """)

st.title("üéØ Body na kru≈ænici")

# ----------------------------
# U≈æivatelsk√© vstupy
# ----------------------------
col1, col2 = st.columns(2)
with col1:
    x_center = st.number_input("X sou≈ôadnice st≈ôedu (m):", value=0.0, format="%.2f")
    radius = st.number_input("Polomƒõr kru≈ænice (m):", min_value=0.0, value=5.0, format="%.2f")
    color = st.color_picker("Barva bod≈Ø:", "#ff0000")
with col2:
    y_center = st.number_input("Y sou≈ôadnice st≈ôedu (m):", value=0.0, format="%.2f")
    num_points = st.number_input("Poƒçet bod≈Ø:", min_value=1, value=12, step=1)

show_lines = st.checkbox("Spojit body ƒç√°rou")
unit = st.selectbox("Jednotka os", ["m", "cm", "mm"], index=0)

# ----------------------------
# V√Ωpoƒçet a vykreslen√≠
# ----------------------------
if radius > 0 and num_points >= 1:
    angles = np.linspace(0, 2 * np.pi, int(num_points), endpoint=False)
    x_points = x_center + radius * np.cos(angles)
    y_points = y_center + radius * np.sin(angles)

    fig, ax = plt.subplots()
    ax.set_aspect('equal')
    ax.plot(x_points, y_points, 'o', color=color, label='Body na kru≈ænici')
    if show_lines:
        ax.plot(np.append(x_points, x_points[0]), np.append(y_points, y_points[0]),
                '-', color=color, alpha=0.5, label='Spojen√≠ bod≈Ø')
    ax.plot(x_center, y_center, 'x', color='black', label='St≈ôed')

    ax.set_title("Body na kru≈ænici")
    ax.set_xlabel(f"X [{unit}]")
    ax.set_ylabel(f"Y [{unit}]")
    ax.grid(True)
    ax.legend()

    padding = radius * 1.2
    ax.set_xlim(x_center - padding, x_center + padding)
    ax.set_ylim(y_center - padding, y_center + padding)

    st.pyplot(fig)

    # ----------------------------
    # P≈ò√çPRAVA PDF
    # ----------------------------
    # 1. Ulo≈æen√≠ obr√°zku z grafu jako PNG
    img_buf = BytesIO()
    fig.savefig(img_buf, format='png')
    img_buf.seek(0)
    img = Image.open(img_buf)

    # 2. Vytvo≈ôen√≠ PDF s parametry + grafem
    pdf_buf = BytesIO()
    c = canvas.Canvas(pdf_buf, pagesize=A4)
    width, height = A4

    # Strana 1 ‚Äì parametry
    c.setFont("Helvetica-Bold", 16)
    c.drawString(2 * cm, height - 2.5 * cm, "Parametry √∫lohy ‚Äì Body na kru≈ænici")
    c.setFont("Helvetica", 12)

    c.drawString(2 * cm, height - 4 * cm, f"St≈ôed kru≈ænice: ({x_center}, {y_center}) {unit}")
    c.drawString(2 * cm, height - 5 * cm, f"Polomƒõr: {radius} {unit}")
    c.drawString(2 * cm, height - 6 * cm, f"Poƒçet bod≈Ø: {num_points}")
    c.drawString(2 * cm, height - 7 * cm, f"Barva bod≈Ø: {color}")
    c.drawString(2 * cm, height - 8 * cm, f"Spojit body ƒç√°rou: {'Ano' if show_lines else 'Ne'}")
    c.drawString(2 * cm, height - 9.5 * cm, f"Jednotky os: {unit}")
    c.drawString(2 * cm, height - 11 * cm, f"Autor: {autor_jmeno}")
    c.drawString(2 * cm, height - 12 * cm, f"E-mail: {autor_email}")
    c.drawString(2 * cm, height - 13.5 * cm, f"Datum: {datum}")

    c.showPage()

    # Strana 2 ‚Äì obr√°zek grafu
    img_width, img_height = img.size
    max_width = width - 4 * cm
    max_height = height - 4 * cm
    scale = min(max_width / img_width, max_height / img_height)
    new_width = img_width * scale
    new_height = img_height * scale
    img = img.resize((int(new_width), int(new_height)))
    temp_img = BytesIO()
    img.save(temp_img, format="PNG")
    temp_img.seek(0)

    c.drawImage(ImageReader(temp_img), x=2 * cm, y=height - 2 * cm - new_height, width=new_width, height=new_height)
    c.showPage()
    c.save()

    st.download_button(
        label="üìÑ St√°hnout PDF s parametry a grafem",
        data=pdf_buf.getvalue(),
        file_name=f"kruznice_{datetime.now().strftime('%Y%m%d_%H%M%S')}.pdf",
        mime="application/pdf"
    )
